<?xml version="1.0" encoding="UTF-8" standalone="no"?><?xml-stylesheet type="text/xsl" href="../prg/xsl/synan.xsl"?><report><nont name="Program"><nont name="Expression"><nont name="AssignmentExpression"><nont name="DisjunctiveExpression"><nont name="ConjunctiveExpression"><nont name="RelationalExpression"><nont name="AdditiveExpression"><nont name="MultiplicativeExpression"><nont name="PrefixExpression"><nont name="PostfixExpression"><nont name="AtomicExpression"><term lexeme="" name="OPENING_PARENTHESIS"><position begColumn="1" begLine="1" begsource="test.prev" endColumn="1" endLine="1" endsource="test.prev"/></term><nont name="Expressions"><nont name="Expression"><nont name="AssignmentExpression"><nont name="DisjunctiveExpression"><nont name="ConjunctiveExpression"><nont name="RelationalExpression"><nont name="AdditiveExpression"><nont name="MultiplicativeExpression"><nont name="PrefixExpression"><nont name="PostfixExpression"><nont name="AtomicExpression"><term lexeme="banner" name="IDENTIFIER"><position begColumn="2" begLine="1" begsource="test.prev" endColumn="7" endLine="1" endsource="test.prev"/></term><nont name="ArgumentsOpt"/></nont><nont name="PostfixExpressionPrime"/></nont></nont><nont name="MultiplicativeExpressionPrime"/></nont><nont name="AdditiveExpressionPrime"/></nont><nont name="RelationalExpressionPrime"/></nont><nont name="ConjunctiveExpressionPrime"/></nont><nont name="DisjunctiveExpressionPrime"/></nont><nont name="AssignmentExpressionPrime"><term lexeme="" name="ASSIGN"><position begColumn="8" begLine="1" begsource="test.prev" endColumn="8" endLine="1" endsource="test.prev"/></term><nont name="DisjunctiveExpression"><nont name="ConjunctiveExpression"><nont name="RelationalExpression"><nont name="AdditiveExpression"><nont name="MultiplicativeExpression"><nont name="PrefixExpression"><nont name="PostfixExpression"><nont name="AtomicExpression"><term lexeme="&quot;Hello, world.\n&quot;" name="CONST_STRING"><position begColumn="9" begLine="1" begsource="test.prev" endColumn="25" endLine="1" endsource="test.prev"/></term></nont><nont name="PostfixExpressionPrime"/></nont></nont><nont name="MultiplicativeExpressionPrime"/></nont><nont name="AdditiveExpressionPrime"/></nont><nont name="RelationalExpressionPrime"/></nont><nont name="ConjunctiveExpressionPrime"/></nont><nont name="DisjunctiveExpressionPrime"/></nont></nont></nont><nont name="ExpressionPrime"/></nont><nont name="ExpressionsPrime"><term lexeme="" name="COMMA"><position begColumn="26" begLine="1" begsource="test.prev" endColumn="26" endLine="1" endsource="test.prev"/></term><nont name="Expression"><nont name="AssignmentExpression"><nont name="DisjunctiveExpression"><nont name="ConjunctiveExpression"><nont name="RelationalExpression"><nont name="AdditiveExpression"><nont name="MultiplicativeExpression"><nont name="PrefixExpression"><nont name="PostfixExpression"><nont name="AtomicExpression"><term lexeme="putstr" name="IDENTIFIER"><position begColumn="27" begLine="1" begsource="test.prev" endColumn="32" endLine="1" endsource="test.prev"/></term><nont name="ArgumentsOpt"><term lexeme="" name="OPENING_PARENTHESIS"><position begColumn="33" begLine="1" begsource="test.prev" endColumn="33" endLine="1" endsource="test.prev"/></term><nont name="Expressions"><nont name="Expression"><nont name="AssignmentExpression"><nont name="DisjunctiveExpression"><nont name="ConjunctiveExpression"><nont name="RelationalExpression"><nont name="AdditiveExpression"><nont name="MultiplicativeExpression"><nont name="PrefixExpression"><nont name="PostfixExpression"><nont name="AtomicExpression"><term lexeme="banner" name="IDENTIFIER"><position begColumn="34" begLine="1" begsource="test.prev" endColumn="39" endLine="1" endsource="test.prev"/></term><nont name="ArgumentsOpt"/></nont><nont name="PostfixExpressionPrime"/></nont></nont><nont name="MultiplicativeExpressionPrime"/></nont><nont name="AdditiveExpressionPrime"/></nont><nont name="RelationalExpressionPrime"/></nont><nont name="ConjunctiveExpressionPrime"/></nont><nont name="DisjunctiveExpressionPrime"/></nont><nont name="AssignmentExpressionPrime"/></nont><nont name="ExpressionPrime"/></nont><nont name="ExpressionsPrime"/></nont><term lexeme="" name="CLOSING_PARENTHESIS"><position begColumn="40" begLine="1" begsource="test.prev" endColumn="40" endLine="1" endsource="test.prev"/></term></nont></nont><nont name="PostfixExpressionPrime"/></nont></nont><nont name="MultiplicativeExpressionPrime"/></nont><nont name="AdditiveExpressionPrime"/></nont><nont name="RelationalExpressionPrime"/></nont><nont name="ConjunctiveExpressionPrime"/></nont><nont name="DisjunctiveExpressionPrime"/></nont><nont name="AssignmentExpressionPrime"/></nont><nont name="ExpressionPrime"/></nont><nont name="ExpressionsPrime"><term lexeme="" name="COMMA"><position begColumn="41" begLine="1" begsource="test.prev" endColumn="41" endLine="1" endsource="test.prev"/></term><nont name="Expression"><nont name="AssignmentExpression"><nont name="DisjunctiveExpression"><nont name="ConjunctiveExpression"><nont name="RelationalExpression"><nont name="AdditiveExpression"><nont name="MultiplicativeExpression"><nont name="PrefixExpression"><nont name="PostfixExpression"><nont name="AtomicExpression"><term lexeme="0" name="CONST_INTEGER"><position begColumn="42" begLine="1" begsource="test.prev" endColumn="42" endLine="1" endsource="test.prev"/></term></nont><nont name="PostfixExpressionPrime"/></nont></nont><nont name="MultiplicativeExpressionPrime"/></nont><nont name="AdditiveExpressionPrime"/></nont><nont name="RelationalExpressionPrime"/></nont><nont name="ConjunctiveExpressionPrime"/></nont><nont name="DisjunctiveExpressionPrime"/></nont><nont name="AssignmentExpressionPrime"/></nont><nont name="ExpressionPrime"/></nont><nont name="ExpressionsPrime"/></nont></nont></nont><term lexeme="" name="CLOSING_PARENTHESIS"><position begColumn="43" begLine="1" begsource="test.prev" endColumn="43" endLine="1" endsource="test.prev"/></term></nont><nont name="PostfixExpressionPrime"/></nont></nont><nont name="MultiplicativeExpressionPrime"/></nont><nont name="AdditiveExpressionPrime"/></nont><nont name="RelationalExpressionPrime"/></nont><nont name="ConjunctiveExpressionPrime"/></nont><nont name="DisjunctiveExpressionPrime"/></nont><nont name="AssignmentExpressionPrime"/></nont><nont name="ExpressionPrime"><term lexeme="" name="WHERE"><position begColumn="1" begLine="2" begsource="test.prev" endColumn="5" endLine="2" endsource="test.prev"/></term><nont name="Declarations"><nont name="Declaration"><nont name="FunctionDeclaration"><term lexeme="" name="FUN"><position begColumn="3" begLine="3" begsource="test.prev" endColumn="5" endLine="3" endsource="test.prev"/></term><term lexeme="putstr" name="IDENTIFIER"><position begColumn="7" begLine="3" begsource="test.prev" endColumn="12" endLine="3" endsource="test.prev"/></term><term lexeme="" name="OPENING_PARENTHESIS"><position begColumn="13" begLine="3" begsource="test.prev" endColumn="13" endLine="3" endsource="test.prev"/></term><nont name="ParametersOpt"><nont name="Parameters"><nont name="Parameter"><term lexeme="s" name="IDENTIFIER"><position begColumn="14" begLine="3" begsource="test.prev" endColumn="14" endLine="3" endsource="test.prev"/></term><term lexeme="" name="COLON"><position begColumn="15" begLine="3" begsource="test.prev" endColumn="15" endLine="3" endsource="test.prev"/></term><nont name="Type"><term lexeme="" name="STRING"><position begColumn="16" begLine="3" begsource="test.prev" endColumn="21" endLine="3" endsource="test.prev"/></term></nont></nont><nont name="ParametersPrime"/></nont></nont><term lexeme="" name="CLOSING_PARENTHESIS"><position begColumn="22" begLine="3" begsource="test.prev" endColumn="22" endLine="3" endsource="test.prev"/></term><term lexeme="" name="COLON"><position begColumn="23" begLine="3" begsource="test.prev" endColumn="23" endLine="3" endsource="test.prev"/></term><nont name="Type"><term lexeme="" name="VOID"><position begColumn="24" begLine="3" begsource="test.prev" endColumn="27" endLine="3" endsource="test.prev"/></term></nont><nont name="FunctionBodyOpt"/></nont></nont><nont name="DeclarationsPrime"><nont name="Declaration"><nont name="VariableDeclaration"><term lexeme="" name="VAR"><position begColumn="3" begLine="4" begsource="test.prev" endColumn="5" endLine="4" endsource="test.prev"/></term><term lexeme="banner" name="IDENTIFIER"><position begColumn="7" begLine="4" begsource="test.prev" endColumn="12" endLine="4" endsource="test.prev"/></term><term lexeme="" name="COLON"><position begColumn="13" begLine="4" begsource="test.prev" endColumn="13" endLine="4" endsource="test.prev"/></term><nont name="Type"><term lexeme="" name="STRING"><position begColumn="14" begLine="4" begsource="test.prev" endColumn="19" endLine="4" endsource="test.prev"/></term></nont></nont></nont><nont name="DeclarationsPrime"/></nont></nont><term lexeme="" name="END"><position begColumn="1" begLine="5" begsource="test.prev" endColumn="3" endLine="5" endsource="test.prev"/></term><nont name="ExpressionPrime"/></nont></nont></nont></report>